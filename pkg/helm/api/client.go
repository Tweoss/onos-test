// Code generated by onit-generate. DO NOT EDIT.

package api

import (
	apps "github.com/onosproject/onos-test/pkg/helm/api/apps"
	batch "github.com/onosproject/onos-test/pkg/helm/api/batch"
	core "github.com/onosproject/onos-test/pkg/helm/api/core"
	extensions "github.com/onosproject/onos-test/pkg/helm/api/extensions"
	networking "github.com/onosproject/onos-test/pkg/helm/api/networking"
	"github.com/onosproject/onos-test/pkg/helm/api/resource"
)

type Client interface {
	resource.Client
	Apps() apps.Client
	Batch() batch.Client
	Core() core.Client
	Extensions() extensions.Client
	Networking() networking.Client
}

func NewClient(resources resource.Client, filter resource.Filter) Client {
	return &client{
		Client: resources,
		filter: filter,
	}
}

type client struct {
	resource.Client
	filter resource.Filter
}

func (c *client) Apps() apps.Client {
	return apps.NewClient(c.Client, c.filter)
}

func (c *client) Batch() batch.Client {
	return batch.NewClient(c.Client, c.filter)
}

func (c *client) Core() core.Client {
	return core.NewClient(c.Client, c.filter)
}

func (c *client) Extensions() extensions.Client {
	return extensions.NewClient(c.Client, c.filter)
}

func (c *client) Networking() networking.Client {
	return networking.NewClient(c.Client, c.filter)
}
